/*
 * ------------------------------------------------------------------------------
 * Project: symon
 * Version: 0.0.1
 * Description: Tiny Command Line Interface Remote System Monitor.
 * Author: lzcdr
 * Date: 2024-03-04 10:07:41
 * ------------------------------------------------------------------------------
 * This file was automatically generated by the Bytesnap RPC (version 0.1.0) 
 * project generator.
 * ------------------------------------------------------------------------------
 */
#include <vector>
#include <cstdint>
#include "symon_client.hpp"
#include "bytesnap.hpp"
#include "vst_client.hpp"
#include "vst_log_mockup.hpp"

namespace symon {

symon_client::symon_client(const std::string& ip_address, const std::string& port)
    : client_(io_context_, ip_address, port), key_(0)
{
}


bool symon_client::symon_query_request(const Request& request, Response& reply)
{
    // encode request message
    request_base_.clear();
    bytesnap::writer wr(request_base_);
    std::size_t sz = Request::encode(request, wr);

    // send request, get reply
    vst::buffer request_buffer(request_base_, static_cast<uint32_t>(symon_method_id::QUERY));
    request_buffer.fit();
    vst::buffer reply_buffer(reply_base_, static_cast<uint32_t>(symon_method_id::QUERY));
    if(!client_.get(request_buffer, reply_buffer, key_)) {
        return false;
    }

    // decode reply message
    bytesnap::reader rd(reply_base_);
    if (!Response::decode(reply, rd)) {
        return false;
    }

    return true;
}


} // namespace symon